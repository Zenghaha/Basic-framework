<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ud.basic.system.persistence.sys.auto.mapper.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.ud.basic.system.persistence.sys.auto.model.SysRole">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="rights" jdbcType="VARCHAR" property="rights" />
    <result column="resource_rights" jdbcType="VARCHAR" property="resourceRights" />
    <result column="is_default" jdbcType="BIT" property="isDefault" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="last_modified_date" jdbcType="TIMESTAMP" property="lastModifiedDate" />
    <result column="last_modified_by" jdbcType="VARCHAR" property="lastModifiedBy" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="position" jdbcType="VARCHAR" property="position" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, org_id, role_name, parent_id, rights, resource_rights, is_default, created_date, 
    created_by, last_modified_date, last_modified_by, del_flag, company_name, department, 
    position
  </sql>
  <select id="selectByExample" parameterType="com.ud.basic.system.persistence.sys.auto.model.SysRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ud.basic.system.persistence.sys.auto.model.SysRoleExample">
    delete from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ud.basic.system.persistence.sys.auto.model.SysRole">
    <selectKey keyProperty="roleId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role (org_id, role_name, parent_id, 
      rights, resource_rights, is_default, 
      created_date, created_by, last_modified_date, 
      last_modified_by, del_flag, company_name, 
      department, position)
    values (#{orgId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{rights,jdbcType=VARCHAR}, #{resourceRights,jdbcType=VARCHAR}, #{isDefault,jdbcType=BIT}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, #{lastModifiedDate,jdbcType=TIMESTAMP}, 
      #{lastModifiedBy,jdbcType=VARCHAR}, #{delFlag,jdbcType=BIT}, #{companyName,jdbcType=VARCHAR}, 
      #{department,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ud.basic.system.persistence.sys.auto.model.SysRole">
    <selectKey keyProperty="roleId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orgId != null">
        org_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="rights != null">
        rights,
      </if>
      <if test="resourceRights != null">
        resource_rights,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="lastModifiedDate != null">
        last_modified_date,
      </if>
      <if test="lastModifiedBy != null">
        last_modified_by,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="position != null">
        position,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="rights != null">
        #{rights,jdbcType=VARCHAR},
      </if>
      <if test="resourceRights != null">
        #{resourceRights,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=BIT},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="lastModifiedDate != null">
        #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedBy != null">
        #{lastModifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ud.basic.system.persistence.sys.auto.model.SysRoleExample" resultType="java.lang.Integer">
    select count(*) from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.rights != null">
        rights = #{record.rights,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceRights != null">
        resource_rights = #{record.resourceRights,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null">
        is_default = #{record.isDefault,jdbcType=BIT},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModifiedDate != null">
        last_modified_date = #{record.lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifiedBy != null">
        last_modified_by = #{record.lastModifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=BIT},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      org_id = #{record.orgId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      rights = #{record.rights,jdbcType=VARCHAR},
      resource_rights = #{record.resourceRights,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=BIT},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      last_modified_date = #{record.lastModifiedDate,jdbcType=TIMESTAMP},
      last_modified_by = #{record.lastModifiedBy,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=BIT},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ud.basic.system.persistence.sys.auto.model.SysRole">
    update sys_role
    <set>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="rights != null">
        rights = #{rights,jdbcType=VARCHAR},
      </if>
      <if test="resourceRights != null">
        resource_rights = #{resourceRights,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=BIT},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="lastModifiedDate != null">
        last_modified_date = #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedBy != null">
        last_modified_by = #{lastModifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ud.basic.system.persistence.sys.auto.model.SysRole">
    update sys_role
    set org_id = #{orgId,jdbcType=BIGINT},
      role_name = #{roleName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      rights = #{rights,jdbcType=VARCHAR},
      resource_rights = #{resourceRights,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=BIT},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      last_modified_date = #{lastModifiedDate,jdbcType=TIMESTAMP},
      last_modified_by = #{lastModifiedBy,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=BIT},
      company_name = #{companyName,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>